---
- name: Check if Oh My Zsh is installed
  ansible.builtin.stat:
    path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh"
  register: oh_my_zsh_check

- name: Install Oh My Zsh
  ansible.builtin.shell: |
    set -o pipefail && curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh
  args:
    executable: /bin/bash
  when: not oh_my_zsh_check.stat.exists
  register: oh_my_zsh_installed
  changed_when: not oh_my_zsh_check.stat.exists

- name: Remove existing .zshrc file if it is not a symlink
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
    state: absent
  become: false # Ensure we operate as the user
  # Removed condition - always ensure .zshrc is absent before stowing

- name: Check state of .zshrc before stowing
  ansible.builtin.stat:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
  register: zshrc_link_status

- name: Deploy ZSH configuration using GNU Stow
  ansible.builtin.command:
    cmd: stow -t "{{ lookup('env', 'HOME') }}" -d "{{ dotfiles_dir }}/config" zsh
    # Removed chdir, using explicit -d for stow directory
  register: stow_zsh_result # Renamed register variable
  # Changed when the link didn't exist or was incorrect before running stow
  changed_when: >
    not zshrc_link_status.stat.exists or
    not zshrc_link_status.stat.islnk or
    zshrc_link_status.stat.lnk_source != dotfiles_dir + '/config/zsh/.zshrc'

- name: Set ZSH as default shell
  become: true
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    shell: /bin/zsh
